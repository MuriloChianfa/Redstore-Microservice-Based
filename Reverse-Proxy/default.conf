server {
    listen 80 default_server;
    
    server_name 192.168.0.14;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;

    server_name 192.168.0.14;

    # RSA certificate
    ssl_certificate /etc/ssl/ssl.crt;
    ssl_certificate_key /etc/ssl/ssl.key;

    charset utf-8;

    # Magic docker DNS lookup
    resolver 127.0.0.11;

    set $upstreamWeb http://redstore-web;
    set $upstreamApi http://redstore-api;

    location / {
        # include proxy_params;
        proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme; 

        proxy_pass $upstreamWeb;
        proxy_redirect off;

        # Handle Web Socket connections
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /api {
        rewrite ^/api/(.*)$ /$1 break;

        # include proxy_params;
        proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

		proxy_pass $upstreamApi;
        proxy_redirect off;

        # Handle Web Socket connections
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
