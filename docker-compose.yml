version: "3.8"
services:
  redstore-database:
    build:
      context: ./Database
      dockerfile: Dockerfile
      # cache_from:
        # - mysql:5.5.60
      args:
        buildno: 1
    image: redstore-database
    container_name: redstore-database
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=simple-server
    # ports:
      # - "3306:3306"
    stdin_open: false
    tty: false
    networks:
      log-network:
        ipv4_address: 172.16.238.10
      api-network:
        ipv4_address: 172.16.240.10
    logging:
      driver: local
    healthcheck:
      test: ["CMD", "netstat", "-a", "-p", "TCP", "-nl", "|", "grep", "3306"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      mode: global
      replicas: 1

  redstore-logs:
    build:
      context: ./Logs
      dockerfile: Dockerfile
      # cache_from:
        # - alpine
      args:
        buildno: 1
    image: redstore-logs
    container_name: redstore-logs
    restart: unless-stopped
    depends_on:
      - redstore-database
    # ports:
      # - "514:514"
    stdin_open: false
    tty: false
    networks:
      log-network:
        ipv4_address: 172.16.238.11
    healthcheck:
      test: ["CMD", "netstat", "-a", "-p", "TCP", "-nl", "|", "grep", "0.0.0.0:514"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      mode: global
      replicas: 1

  redstore-cache:
    build:
      context: ./Cache
      dockerfile: Dockerfile
      # cache_from:
        # - redis:6.0.9
      args:
        buildno: 1
    image: redstore-cache
    container_name: redstore-cache
    restart: unless-stopped
    depends_on:
      - redstore-logs
    # ports:
      # - "6379:6379"
    stdin_open: false
    tty: false
    networks:
      log-network:
        ipv4_address: 172.16.238.12
      api-network:
        ipv4_address: 172.16.240.11
      cache-network:
        ipv4_address: 172.16.241.10
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://172.16.238.11:514"
        tag: "Redstore-Cache"
    healthcheck:
      test: ["CMD", "netstat", "-a", "-p", "TCP", "-nl", "|", "grep", "6379"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      mode: global
      replicas: 1

  redstore-queue:
    build:
      context: ./Queue
      dockerfile: Dockerfile
      # cache_from:
        # - php:7.2-apache
      args:
        buildno: 1
    image: redstore-queue
    container_name: redstore-queue
    restart: unless-stopped
    depends_on:
      - redstore-logs
    # ports:
      # - "15671:15671"
      # - "15672:15672"
      # - "5671:5671"
      # - "5672:5672"
    stdin_open: false
    tty: false
    networks:
      log-network:
        ipv4_address: 172.16.238.14
      queue-network:
        ipv4_address: 172.16.239.10
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://172.16.238.11:514"
        tag: "Redstore-Queue"
    healthcheck:
      test: ["CMD", "netstat", "-a", "-p", "TCP", "-nl", "|", "grep", "5672"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      mode: global
      replicas: 1

  redstore-api:
    build:    
      context: ./API
      dockerfile: Dockerfile
      network: host
      # cache_from:
        # - php:7.2-apache
      args:
        buildno: 1
    image: redstore-api
    container_name: redstore-api
    restart: unless-stopped
    depends_on:
      - redstore-queue
    # ports:
      # - "3000:3000"
    volumes:
      - /home/simple-server/redstore/API/api:/var/www/html
    env_file:
      - ./.env
    stdin_open: false
    tty: false
    networks:
      log-network:
        ipv4_address: 172.16.238.13
      queue-network:
        ipv4_address: 172.16.239.11
      api-network:
        ipv4_address: 172.16.240.12
      cache-network:
        ipv4_address: 172.16.241.11
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://172.16.238.11:514"
        tag: "Redstore-API"
    healthcheck:
      test: ["CMD", "netstat", "-a", "-p", "TCP", "-nl", "|", "grep", "0.0.0.0:3000"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      mode: global
      replicas: 1

  redstore-mailler:
    build:
      context: ./Mailler
      dockerfile: Dockerfile
      # cache_from:
        # - php:8.0.3-alpine3.13
      args:
        buildno: 1
    image: redstore-mailler
    container_name: redstore-mailler
    depends_on:
      - redstore-api
    stdin_open: false
    tty: false
    networks:
      log-network:
        ipv4_address: 172.16.238.15
      queue-network:
        ipv4_address: 172.16.239.12
      cache-network:
        ipv4_address: 172.16.241.12
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://172.16.238.11:514"
        tag: "Redstore-Mailler"
    healthcheck:
      test: ["CMD", "netstat", "-a", "-p", "TCP", "-n", "&&", "echo", "1"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      mode: global
      replicas: 1

  redstore-web:
    build:
      context: ./Web
      dockerfile: Dockerfile
      # cache_from:
        # - php:7.2-apache
      args:
        buildno: 1
    image: redstore-web
    container_name: redstore-web
    restart: unless-stopped
    depends_on:
      - redstore-api
    # ports:
      # - "80:80"
      # - "443:443"
    volumes:
      - /home/simple-server/redstore/Web/Frontend:/var/www/html
    env_file:
      - ./.env
    stdin_open: false
    tty: false
    networks:
      log-network:
        ipv4_address: 172.16.238.16
      queue-network:
        ipv4_address: 172.16.239.13
      api-network:
        ipv4_address: 172.16.240.13
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://172.16.238.11:514"
        tag: "Redstore-Web"
    healthcheck:
      test: ["CMD", "netstat", "-a", "-p", "TCP", "-nl", "|", "grep", "0.0.0.0:443"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      mode: global
      replicas: 1

  redstore-reverse-proxy:
    build:
      context: ./Reverse-Proxy
      dockerfile: Dockerfile
      # cache_from:
        # - nginx:1.20.0
      #args:
        # buildno: 1
        # - DOMAIN_LIST=redstore.com.br
    image: redstore-reverse-proxy
    container_name: redstore-reverse-proxy
    restart: unless-stopped
    depends_on:
      - redstore-api
      - redstore-web
    ports:
      - "80:80"
      - "443:443"
    stdin_open: false
    tty: false
    networks:
      api-network:
        ipv4_address: 172.16.240.14
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://172.16.238.11:514"
        tag: "Redstore-Reverse-Proxy"
    healthcheck:
      test: ["CMD", "netstat", "-a", "-p", "TCP", "-nl", "|", "grep", "0.0.0.0:443"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      mode: global
      replicas: 1

networks:
  log-network:
    ipam:
      driver: default
      config:
        - subnet: "172.16.238.0/24"
  queue-network:
    ipam:
      driver: default
      config:
        - subnet: "172.16.239.0/24"
  api-network:
    ipam:
      driver: default
      config:
        - subnet: "172.16.240.0/24"
  cache-network:
    ipam:
      driver: default
      config:
        - subnet: "172.16.241.0/24"
