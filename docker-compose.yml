version: "3.8"
services:
  redstore-database:
    build:
      context: ./Database
      dockerfile: Dockerfile
    image: murilochianfa/redstore-database:development
    container_name: redstore-database
    restart: unless-stopped
    hostname: database
    ports:
      - "3306:3306"
    volumes:
      - database:/var/lib/mysql
    stdin_open: false
    tty: false
    networks:
      - log-network
      - api-network
    logging:
      driver: local
    healthcheck:
      test: ["CMD", "netstat", "-a", "-p", "TCP", "-nl", "|", "grep", "3306"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redstore-logs:
    build:
      context: ./Logs
      dockerfile: Dockerfile
    image: murilochianfa/redstore-logs:development
    container_name: redstore-logs
    restart: unless-stopped
    hostname: logs
    depends_on:
      - redstore-database
    stdin_open: false
    tty: false
    networks:
      - log-network
    logging:
      driver: local
    healthcheck:
      test: ["CMD", "netstat", "-a", "-p", "TCP", "-nl", "|", "grep", "0.0.0.0:514"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redstore-cache:
    build:
      context: ./Cache
      dockerfile: Dockerfile
    image: murilochianfa/redstore-cache:development
    container_name: redstore-cache
    restart: unless-stopped
    hostname: cache
    depends_on:
      - redstore-logs
    stdin_open: false
    tty: false
    networks:
      - api-network
      - cache-network
    healthcheck:
      test: ["CMD", "netstat", "-a", "-p", "TCP", "-nl", "|", "grep", "6379"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redstore-queue:
    build:
      context: ./Queue
      dockerfile: Dockerfile.development
    image: murilochianfa/redstore-queue:development
    container_name: redstore-queue
    restart: unless-stopped
    hostname: queue
    depends_on:
      - redstore-logs
    ports:
      - "15672:15672"
    stdin_open: false
    tty: false
    networks:
      - queue-network
    healthcheck:
      test: ["CMD", "netstat", "-a", "-p", "TCP", "-nl", "|", "grep", "5672"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redstore-api:
    build:    
      context: .
      dockerfile: API/Dockerfile.development
    image: murilochianfa/redstore-api:development
    container_name: redstore-api
    restart: unless-stopped
    hostname: api
    depends_on:
      - redstore-queue
    volumes:
      - ./API/API:/var/www/html
    env_file:
      - ./.env
    environment:
      - CHECKOUT_ENVIRONMENT=sandbox
    stdin_open: false
    tty: false
    networks:
      - log-network
      - queue-network
      - api-network
      - cache-network
    healthcheck:
      test: ["CMD", "netstat", "-a", "-p", "TCP", "-nl", "|", "grep", "0.0.0.0:3000"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redstore-mailler:
    build:
      context: ./Mailler
      dockerfile: Dockerfile.development
    image: murilochianfa/redstore-mailler:development
    hostname: mailler
    depends_on:
      - redstore-api
    volumes:
      - ./Mailler/App:/app
    env_file:
      - ./.env
    stdin_open: false
    tty: false
    networks:
      - log-network
      - queue-network
      - cache-network
    healthcheck:
      test: ["CMD", "ping", "-c", "1", "-w", "1", "redstore-queue"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 20s
    deploy:
      mode: replicated
      replicas: 4

  redstore-web:
    build:
      context: .
      dockerfile: Web/Dockerfile.development
    image: murilochianfa/redstore-web:development
    container_name: redstore-web
    restart: unless-stopped
    hostname: web
    depends_on:
      - redstore-api
    volumes:
      - ./Web/Frontend:/var/www/html
    env_file:
      - ./.env
    stdin_open: false
    tty: false
    networks:
      - log-network
      - queue-network
      - api-network
    healthcheck:
      test: ["CMD", "netstat", "-a", "-p", "TCP", "-nl", "|", "grep", "0.0.0.0:443"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redstore-reverse-proxy:
    build:
      context: ./Reverse-Proxy
      dockerfile: Dockerfile
    image: murilochianfa/redstore-reverse-proxy:development
    container_name: redstore-reverse-proxy
    restart: unless-stopped
    hostname: reverse-proxy
    depends_on:
      - redstore-api
      - redstore-web
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - ./.env
    stdin_open: false
    tty: false
    networks:
      - api-network
    healthcheck:
      test: ["CMD", "netstat", "-a", "-p", "TCP", "-nl", "|", "grep", "0.0.0.0:443"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  log-network:
    name: redstore-log-network
    driver: bridge
  queue-network:
    name: redstore-queue-network
    driver: bridge
  api-network:
    name: redstore-api-network
    driver: bridge
  cache-network:
    name: redstore-cache-network
    driver: bridge

volumes:
  database:
